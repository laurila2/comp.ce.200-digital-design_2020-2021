-- VHDL Entity alien_game_lib.c3_t1_Gun_Module.symbol
--
-- Created:
--          by - viuhom.viuhom (linux-desktop5.tuni.fi)
--          at - 15:35:55 11/13/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c3_t1_Gun_Module IS
   PORT( 
      btn          : IN     std_logic_vector (3 DOWNTO 0);
      clk          : IN     std_logic;
      enable       : IN     std_logic;
      gun_px_idx   : IN     std_logic_vector (1 DOWNTO 0);
      rst_n        : IN     std_logic;
      Gun_color    : OUT    std_logic_vector (23 DOWNTO 0);
      X_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      Y_coordinate : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c3_t1_Gun_Module ;

--
-- VHDL Architecture alien_game_lib.c3_t1_Gun_Module.struct
--
-- Created:
--          by - viuhom.viuhom (linux-desktop5.tuni.fi)
--          at - 15:35:55 11/13/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c3_t1_Gun_Module IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL X_coord   : std_logic_vector(7 DOWNTO 0);
   SIGNAL btn_pulse : std_logic_vector(3 DOWNTO 0);
   SIGNAL dout      : std_logic;
   SIGNAL dout1     : std_logic;
   SIGNAL dout2     : std_logic;
   SIGNAL move      : std_logic;


   -- Component Declarations
   COMPONENT button_block
   PORT (
      btn       : IN     std_logic_vector (3 DOWNTO 0);
      enable    : IN     std_logic ;
      btn_pulse : OUT    std_logic_vector (3 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT shape_block
   PORT (
      X_coord      : IN     std_logic_vector (7 DOWNTO 0);
      gun_px_idx   : IN     std_logic_vector (1 DOWNTO 0);
      X_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      Y_coordinate : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT x_coordinate_block
   PORT (
      btn_pulse : IN     std_logic_vector (3 DOWNTO 0);
      clk       : IN     std_logic ;
      move      : IN     std_logic ;
      rst_n     : IN     std_logic ;
      X_coord   : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : button_block USE ENTITY alien_game_lib.button_block;
   FOR ALL : shape_block USE ENTITY alien_game_lib.shape_block;
   FOR ALL : x_coordinate_block USE ENTITY alien_game_lib.x_coordinate_block;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'and'
   move <= dout AND enable;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'and'
   dout1 <= btn_pulse(1) AND NOT(X_coord(6));

   -- ModuleWare code(v1.12) for instance 'U_6' of 'and'
   dout2 <= btn_pulse(3) AND NOT(X_coord(1));

   -- ModuleWare code(v1.12) for instance 'U_4' of 'constval'
   Gun_color <= "101010011000101011000111";

   -- ModuleWare code(v1.12) for instance 'U_3' of 'xor'
   dout <= dout1 XOR dout2;

   -- Instance port mappings.
   U_7 : button_block
      PORT MAP (
         btn       => btn,
         enable    => enable,
         btn_pulse => btn_pulse
      );
   U_1 : shape_block
      PORT MAP (
         X_coord      => X_coord,
         gun_px_idx   => gun_px_idx,
         X_coordinate => X_coordinate,
         Y_coordinate => Y_coordinate
      );
   U_2 : x_coordinate_block
      PORT MAP (
         btn_pulse => btn_pulse,
         clk       => clk,
         move      => move,
         rst_n     => rst_n,
         X_coord   => X_coord
      );

END struct;
