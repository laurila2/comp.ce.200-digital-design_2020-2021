-- VHDL Entity alien_game_lib.c6_t1_victory_effect.symbol
--
-- Created:
--          by - viuhom.viuhom (linux-desktop9.tuni.fi)
--          at - 10:39:32 11/27/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c6_t1_victory_effect IS
   PORT( 
      clk          : IN     std_logic;
      enable       : IN     std_logic;
      rst_n        : IN     std_logic;
      X_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      Y_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      color        : OUT    std_logic_vector (23 DOWNTO 0)
   );

-- Declarations

END c6_t1_victory_effect ;

--
-- VHDL Architecture alien_game_lib.c6_t1_victory_effect.struct
--
-- Created:
--          by - viuhom.viuhom (linux-desktop9.tuni.fi)
--          at - 10:39:31 11/27/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c6_t1_victory_effect IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL data_out  : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_out1 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout0     : std_logic;
   SIGNAL dout2     : std_logic;
   SIGNAL dout3     : std_logic;
   SIGNAL dout4     : std_logic;
   SIGNAL dout5     : std_logic;
   SIGNAL dout7     : std_logic;
   SIGNAL q         : std_logic;
   SIGNAL qb        : std_logic;
   SIGNAL sel       : std_logic_vector(1 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL X_coordinate_internal : std_logic_vector (7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_3' of 'adff'
   SIGNAL mw_U_3reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_4' of 'adff'
   SIGNAL mw_U_4reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.12) for instance 'U_7' of 'split'
   SIGNAL mw_U_7temp_din : std_logic_vector(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT c2_t3_left_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t4_right_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t3_left_shifter USE ENTITY alien_game_lib.c2_t3_left_shifter;
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_3' of 'adff'
   X_coordinate_internal <= mw_U_3reg_cval;
   u_3seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_3reg_cval <= "00010000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_3reg_cval <= dout;
      END IF;
   END PROCESS u_3seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'adff'
   q <= mw_U_4reg_cval;
   qb <= NOT(mw_U_4reg_cval);
   u_4seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_4reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_4reg_cval <= dout2;
      END IF;
   END PROCESS u_4seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_10' of 'and'
   dout4 <= q AND dout7;

   -- ModuleWare code(v1.12) for instance 'U_11' of 'and'
   dout3 <= dout0 AND NOT(q);

   -- ModuleWare code(v1.12) for instance 'U_12' of 'buff'
   Y_coordinate <= X_coordinate_internal;

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   color <= "101100001000101011000111";

   -- ModuleWare code(v1.12) for instance 'U_5' of 'merge'
   sel <= enable & dout2;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(X_coordinate_internal, data_out, data_out1, 
                          sel)
   BEGIN
      CASE sel IS
      WHEN "00" => dout <= X_coordinate_internal;
      WHEN "01" => dout <= X_coordinate_internal;
      WHEN "10" => dout <= data_out;
      WHEN "11" => dout <= data_out1;
      WHEN OTHERS => dout <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'mux'
   u_6combo_proc: PROCESS(q, qb, dout5)
   BEGIN
      CASE dout5 IS
      WHEN '0' => dout2 <= q;
      WHEN '1' => dout2 <= qb;
      WHEN OTHERS => dout2 <= 'X';
      END CASE;
   END PROCESS u_6combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_8' of 'or'
   dout5 <= dout3 OR dout4;

   -- ModuleWare code(v1.12) for instance 'U_7' of 'split'
   mw_U_7temp_din <= X_coordinate_internal;
   u_7combo_proc: PROCESS (mw_U_7temp_din)
   VARIABLE temp_din: std_logic_vector(7 DOWNTO 0);
   BEGIN
      temp_din := mw_U_7temp_din(7 DOWNTO 0);
      dout0 <= temp_din(0);
      dout7 <= temp_din(7);
   END PROCESS u_7combo_proc;

   -- Instance port mappings.
   U_0 : c2_t3_left_shifter
      PORT MAP (
         data_in  => X_coordinate_internal,
         data_out => data_out1
      );
   U_1 : c2_t4_right_shifter
      PORT MAP (
         data_in  => X_coordinate_internal,
         data_out => data_out
      );

   -- Implicit buffered output assignments
   X_coordinate <= X_coordinate_internal;

END struct;
