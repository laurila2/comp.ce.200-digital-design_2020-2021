-- VHDL Entity alien_game_lib.shape_block.interface
--
-- Created:
--          by - viuhom.viuhom (linux-desktop12.tuni.fi)
--          at - 11:11:59 10/07/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY shape_block IS
   PORT( 
      X_coord      : IN     std_logic_vector (7 DOWNTO 0);
      gun_px_idx   : IN     std_logic_vector (1 DOWNTO 0);
      X_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      Y_coordinate : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END shape_block ;

--
-- VHDL Architecture alien_game_lib.shape_block.struct
--
-- Created:
--          by - viuhom.viuhom (linux-desktop12.tuni.fi)
--          at - 11:21:49 10/07/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF shape_block IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL data_out  : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_out1 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1     : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT c2_t3_left_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t4_right_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t3_left_shifter USE ENTITY alien_game_lib.c2_t3_left_shifter;
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_4' of 'constval'
   dout1 <= "10000000";

   -- ModuleWare code(v1.12) for instance 'U_5' of 'constval'
   dout <= "01000000";

   -- ModuleWare code(v1.12) for instance 'U_0' of 'mux'
   u_0combo_proc: PROCESS(X_coord, data_out, data_out1, gun_px_idx)
   BEGIN
      CASE gun_px_idx IS
      WHEN "00" => X_coordinate <= X_coord;
      WHEN "01" => X_coordinate <= X_coord;
      WHEN "10" => X_coordinate <= data_out;
      WHEN "11" => X_coordinate <= data_out1;
      WHEN OTHERS => X_coordinate <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_0combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'mux'
   u_1combo_proc: PROCESS(dout1, dout, gun_px_idx)
   BEGIN
      CASE gun_px_idx IS
      WHEN "00" => Y_coordinate <= dout1;
      WHEN "01" => Y_coordinate <= dout;
      WHEN "10" => Y_coordinate <= dout1;
      WHEN "11" => Y_coordinate <= dout1;
      WHEN OTHERS => Y_coordinate <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_1combo_proc;

   -- Instance port mappings.
   U_2 : c2_t3_left_shifter
      PORT MAP (
         data_in  => X_coord,
         data_out => data_out1
      );
   U_3 : c2_t4_right_shifter
      PORT MAP (
         data_in  => X_coord,
         data_out => data_out
      );

END struct;
