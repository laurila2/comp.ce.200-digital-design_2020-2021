<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 13:52:05 on 12/09/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c5_t1_hit_detector.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop5.tuni.fi)</span>
<span class=C>--          at - 11:26:33 11&#47;10&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c5_t1_hit_detector <span class=K>IS</span>
   <span class=K>PORT</span>(
      alien_x_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_y_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_x_coord : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y_coord : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span>;
      hit            : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c5_t1_hit_detector ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c5_t1_hit_detector.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop5.tuni.fi)</span>
<span class=C>--          at - 11:26:33 11&#47;10&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c5_t1_hit_detector <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din1   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout0  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout10 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout11 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout12 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout13 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout14 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout15 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout16 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout17 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout18 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout19 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout20 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout21 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout22 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout23 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout24 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout25 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout26 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout27 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout28 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout29 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout30 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout31 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout32 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout33 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout34 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout35 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout36 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout37 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout38 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout39 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout40 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout41 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout42 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout43 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout44 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout45 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout46 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout47 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout48 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout5  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout6  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout7  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout8  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout9  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> qb     : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_15' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_15reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_0temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_2' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_2temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_11' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_11temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_12' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_12temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_15' of 'adff'</span>
   qb <= <span class=K>NOT</span>(mw_U_15reg_cval);
   u_15seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_15reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_15reg_cval <= dout27;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_15seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'and'</span>
   dout <= dout0 <span class=K>AND</span> dout1;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'and'</span>
   dout16 <= dout2 <span class=K>AND</span> dout3;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'and'</span>
   dout17 <= dout4 <span class=K>AND</span> dout5;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'and'</span>
   dout18 <= dout6 <span class=K>AND</span> dout7;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'and'</span>
   dout19 <= dout8 <span class=K>AND</span> dout12;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'and'</span>
   dout20 <= dout9 <span class=K>AND</span> dout13;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'and'</span>
   dout21 <= dout10 <span class=K>AND</span> dout14;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'and'</span>
   dout22 <= dout11 <span class=K>AND</span> dout15;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_13' of 'and'</span>
   dout25 <= dout23 <span class=K>AND</span> dout24;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_14' of 'and'</span>
   dout27 <= dout26 <span class=K>AND</span> din1;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_16' of 'and'</span>
   dout43 <= dout35 <span class=K>AND</span> dout31;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_17' of 'and'</span>
   hit <= dout27 <span class=K>AND</span> qb;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_18' of 'and'</span>
   dout45 <= dout36 <span class=K>AND</span> dout32;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_19' of 'and'</span>
   dout48 <= dout37 <span class=K>AND</span> dout33;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_20' of 'and'</span>
   dout47 <= dout38 <span class=K>AND</span> dout34;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_21' of 'and'</span>
   dout46 <= dout39 <span class=K>AND</span> dout30;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_22' of 'and'</span>
   dout44 <= dout40 <span class=K>AND</span> dout29;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_23' of 'and'</span>
   dout42 <= dout41 <span class=K>AND</span> dout28;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'or'</span>
   dout26 <= dout <span class=K>OR</span> dout16 <span class=K>OR</span> dout17 <span class=K>OR</span> dout18 <span class=K>OR</span> dout19 <span class=K>OR</span> dout20
             <span class=K>OR</span> dout21 <span class=K>OR</span> dout22;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_24' of 'or'</span>
   din1 <= dout25 <span class=K>OR</span> dout43 <span class=K>OR</span> dout45 <span class=K>OR</span> dout48 <span class=K>OR</span> dout47 <span class=K>OR</span> dout46
           <span class=K>OR</span> dout44 <span class=K>OR</span> dout42;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'split'</span>
   mw_U_0temp_din <= bullet_x_coord;
   u_0combo_proc: <span class=K>PROCESS</span> (mw_U_0temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_0temp_din(7 <span class=K>DOWNTO</span> 0);
      dout0 <= temp_din(0);
      dout2 <= temp_din(1);
      dout4 <= temp_din(2);
      dout6 <= temp_din(3);
      dout8 <= temp_din(4);
      dout9 <= temp_din(5);
      dout10 <= temp_din(6);
      dout11 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'split'</span>
   mw_U_2temp_din <= alien_x_coord;
   u_2combo_proc: <span class=K>PROCESS</span> (mw_U_2temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_2temp_din(7 <span class=K>DOWNTO</span> 0);
      dout1 <= temp_din(0);
      dout3 <= temp_din(1);
      dout5 <= temp_din(2);
      dout7 <= temp_din(3);
      dout12 <= temp_din(4);
      dout13 <= temp_din(5);
      dout14 <= temp_din(6);
      dout15 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_2combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_11' of 'split'</span>
   mw_U_11temp_din <= alien_y_coord;
   u_11combo_proc: <span class=K>PROCESS</span> (mw_U_11temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_11temp_din(7 <span class=K>DOWNTO</span> 0);
      dout23 <= temp_din(0);
      dout35 <= temp_din(1);
      dout36 <= temp_din(2);
      dout37 <= temp_din(3);
      dout38 <= temp_din(4);
      dout39 <= temp_din(5);
      dout40 <= temp_din(6);
      dout41 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_11combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_12' of 'split'</span>
   mw_U_12temp_din <= bullet_y_coord;
   u_12combo_proc: <span class=K>PROCESS</span> (mw_U_12temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_12temp_din(7 <span class=K>DOWNTO</span> 0);
      dout24 <= temp_din(0);
      dout31 <= temp_din(1);
      dout32 <= temp_din(2);
      dout33 <= temp_din(3);
      dout34 <= temp_din(4);
      dout30 <= temp_din(5);
      dout29 <= temp_din(6);
      dout28 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_12combo_proc;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
