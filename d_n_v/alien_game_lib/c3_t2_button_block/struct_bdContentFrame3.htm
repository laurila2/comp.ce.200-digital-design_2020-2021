<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 13:52:00 on 12/09/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t2_button_block.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop6.tuni.fi)</span>
<span class=C>--          at - 11:05:15 10&#47;09&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t2_button_block <span class=K>IS</span>
   <span class=K>PORT</span>(
      Bullet_Y_coordinate : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      btn                 : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      enable              : <span class=A>IN</span>     <span class=T>std_logic</span>;
      btn_pulse           : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t2_button_block ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t2_button_block.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop6.tuni.fi)</span>
<span class=C>--          at - 11:05:15 10&#47;09&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_t2_button_block <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout0  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout10 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout5  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout6  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout7  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout8  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout9  : <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_4' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_4temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_5' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_5temp_din : <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'and'</span>
   btn_pulse <= dout10 <span class=K>AND</span> <span class=K>NOT</span>(dout);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'constval'</span>
   dout1 <= <span class=S>"0000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'mux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(dout1, btn, enable)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> enable <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout9 <= dout1;
      <span class=K>WHEN</span> '1' => dout9 <= btn;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout9 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'or'</span>
   dout <= dout0 <span class=K>OR</span> dout2 <span class=K>OR</span> dout3 <span class=K>OR</span> dout4 <span class=K>OR</span> dout5 <span class=K>OR</span> dout6 <span class=K>OR</span> dout7
           <span class=K>OR</span> dout8;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'split'</span>
   mw_U_4temp_din <= Bullet_Y_coordinate;
   u_4combo_proc: <span class=K>PROCESS</span> (mw_U_4temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_4temp_din(7 <span class=K>DOWNTO</span> 0);
      dout0 <= temp_din(0);
      dout2 <= temp_din(1);
      dout3 <= temp_din(2);
      dout4 <= temp_din(3);
      dout5 <= temp_din(4);
      dout6 <= temp_din(5);
      dout7 <= temp_din(6);
      dout8 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_4combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'split'</span>
   mw_U_5temp_din <= dout9;
   u_5combo_proc: <span class=K>PROCESS</span> (mw_U_5temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_5temp_din(3 <span class=K>DOWNTO</span> 0);
      dout10 <= temp_din(0);
   <span class=K>END</span> <span class=K>PROCESS</span> u_5combo_proc;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
