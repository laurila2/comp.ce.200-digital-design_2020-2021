<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 13:51:56 on 12/09/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t1_Gun_Module.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop5.tuni.fi)</span>
<span class=C>--          at - 15:35:55 11&#47;13&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t1_Gun_Module <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn          : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk          : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_px_idx   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      rst_n        : <span class=A>IN</span>     <span class=T>std_logic</span>;
      Gun_color    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      X_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Y_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t1_Gun_Module ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t1_Gun_Module.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop5.tuni.fi)</span>
<span class=C>--          at - 15:35:55 11&#47;13&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_t1_Gun_Module <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> X_coord   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> btn_pulse : <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> move      : <span class=T>std_logic</span>;


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> button_block
   <span class=K>PORT</span> (
      btn       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      enable    : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      btn_pulse : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> shape_block
   <span class=K>PORT</span> (
      X_coord      : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      gun_px_idx   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      X_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Y_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> x_coordinate_block
   <span class=K>PORT</span> (
      btn_pulse : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk       : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      move      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n     : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      X_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : button_block <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.button_block;
   <span class=K>FOR</span> <span class=K>ALL</span> : shape_block <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.shape_block;
   <span class=K>FOR</span> <span class=K>ALL</span> : x_coordinate_block <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.x_coordinate_block;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'and'</span>
   move <= dout <span class=K>AND</span> enable;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'and'</span>
   dout1 <= btn_pulse(1) <span class=K>AND</span> <span class=K>NOT</span>(X_coord(6));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'and'</span>
   dout2 <= btn_pulse(3) <span class=K>AND</span> <span class=K>NOT</span>(X_coord(1));

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'constval'</span>
   Gun_color <= <span class=S>"101010011000101011000111"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'xor'</span>
   dout <= dout1 <span class=K>XOR</span> dout2;

   <span class=C>-- Instance port mappings.</span>
   U_7 : button_block
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn       => btn,
         enable    => enable,
         btn_pulse => btn_pulse
      );
   U_1 : shape_block
      <span class=K>PORT</span> <span class=K>MAP</span> (
         X_coord      => X_coord,
         gun_px_idx   => gun_px_idx,
         X_coordinate => X_coordinate,
         Y_coordinate => Y_coordinate
      );
   U_2 : x_coordinate_block
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn_pulse => btn_pulse,
         clk       => clk,
         move      => move,
         rst_n     => rst_n,
         X_coord   => X_coord
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
