<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 13:52:18 on 12/09/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.game_logic_hierarcical_block.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop13.tuni.fi)</span>
<span class=C>--          at - 14:09:59 11&#47;20&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> game_logic_hierarcical_block <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn         : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk         : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      write_ready : <span class=A>IN</span>     <span class=T>std_logic</span>;
      color       : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      frame_done  : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      write       : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      x_coord     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> game_logic_hierarcical_block ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.game_logic_hierarcical_block.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - viuhom.viuhom (linux-desktop2.tuni.fi)</span>
<span class=C>--          at - 12:10:58 11&#47;24&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> game_logic_hierarcical_block <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> Bullet_X_coordinate : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> Bullet_Y_coordinate : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> Color2              : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> Gun_color           : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> X_coord1            : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> X_coordinate        : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> Y_coord1            : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> Y_coordinate        : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> alien_defeated      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> color1              : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din3                : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din4                : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din5                : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> enable              : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> gun_px_idx          : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> hit                 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> module_select       : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c2_t6_basic_alien_design_top
   <span class=K>PORT</span> (
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      hit            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      X_coord        : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Y_coord        : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_defeated : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      color          : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c3_t1_Gun_Module
   <span class=K>PORT</span> (
      btn          : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable       : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      gun_px_idx   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      rst_n        : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      Gun_color    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      X_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Y_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c3_t2_Bullet_Flight_Modelling
   <span class=K>PORT</span> (
      Gun_X_coordinate    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      btn                 : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk                 : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable              : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n               : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      Bullet_X_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Bullet_Y_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Color               : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c5_t1_hit_detector
   <span class=K>PORT</span> (
      alien_x_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_y_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_x_coord : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y_coord : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      hit            : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c5_t2_Write_Sequencer
   <span class=K>PORT</span> (
      alien_defeated : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      write_ready    : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      frame_done     : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      gun_px_idx     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      module_select  : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      write          : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c6_t1_victory_effect
   <span class=K>PORT</span> (
      clk          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable       : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n        : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      X_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      Y_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      color        : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t6_basic_alien_design_top <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t6_basic_alien_design_top;
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t1_Gun_Module <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t1_Gun_Module;
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t2_Bullet_Flight_Modelling <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t2_Bullet_Flight_Modelling;
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t1_hit_detector <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t1_hit_detector;
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t2_Write_Sequencer <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t2_Write_Sequencer;
   <span class=K>FOR</span> <span class=K>ALL</span> : c6_t1_victory_effect <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c6_t1_victory_effect;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'mux'</span>
   u_5combo_proc: <span class=K>PROCESS</span>(X_coord1, X_coordinate, Bullet_X_coordinate,
                          din5, module_select)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> module_select <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => x_coord <= X_coord1;
      <span class=K>WHEN</span> <span class=S>"01"</span> => x_coord <= X_coordinate;
      <span class=K>WHEN</span> <span class=S>"10"</span> => x_coord <= Bullet_X_coordinate;
      <span class=K>WHEN</span> <span class=S>"11"</span> => x_coord <= din5;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'mux'</span>
   u_6combo_proc: <span class=K>PROCESS</span>(Y_coord1, Y_coordinate, Bullet_Y_coordinate,
                          din4, module_select)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> module_select <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => y_coord <= Y_coord1;
      <span class=K>WHEN</span> <span class=S>"01"</span> => y_coord <= Y_coordinate;
      <span class=K>WHEN</span> <span class=S>"10"</span> => y_coord <= Bullet_Y_coordinate;
      <span class=K>WHEN</span> <span class=S>"11"</span> => y_coord <= din4;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_6combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'mux'</span>
   u_7combo_proc: <span class=K>PROCESS</span>(color1, Gun_color, Color2, din3,
                          module_select)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> module_select <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => color <= color1;
      <span class=K>WHEN</span> <span class=S>"01"</span> => color <= Gun_color;
      <span class=K>WHEN</span> <span class=S>"10"</span> => color <= Color2;
      <span class=K>WHEN</span> <span class=S>"11"</span> => color <= din3;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => color <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_7combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_1 : c2_t6_basic_alien_design_top
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk            => clk,
         enable         => enable,
         hit            => hit,
         rst_n          => rst_n,
         X_coord        => X_coord1,
         Y_coord        => Y_coord1,
         alien_defeated => alien_defeated,
         color          => color1
      );
   U_2 : c3_t1_Gun_Module
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn          => btn,
         clk          => clk,
         enable       => enable,
         gun_px_idx   => gun_px_idx,
         rst_n        => rst_n,
         Gun_color    => Gun_color,
         X_coordinate => X_coordinate,
         Y_coordinate => Y_coordinate
      );
   U_4 : c3_t2_Bullet_Flight_Modelling
      <span class=K>PORT</span> <span class=K>MAP</span> (
         Gun_X_coordinate    => X_coordinate,
         btn                 => btn,
         clk                 => clk,
         enable              => enable,
         rst_n               => rst_n,
         Bullet_X_coordinate => Bullet_X_coordinate,
         Bullet_Y_coordinate => Bullet_Y_coordinate,
         Color               => Color2
      );
   U_3 : c5_t1_hit_detector
      <span class=K>PORT</span> <span class=K>MAP</span> (
         alien_x_coord  => X_coord1,
         alien_y_coord  => Y_coord1,
         bullet_x_coord => Bullet_X_coordinate,
         bullet_y_coord => Bullet_Y_coordinate,
         clk            => clk,
         rst_n          => rst_n,
         hit            => hit
      );
   U_0 : c5_t2_Write_Sequencer
      <span class=K>PORT</span> <span class=K>MAP</span> (
         alien_defeated => alien_defeated,
         clk            => clk,
         rst_n          => rst_n,
         write_ready    => write_ready,
         enable         => enable,
         frame_done     => frame_done,
         gun_px_idx     => gun_px_idx,
         module_select  => module_select,
         write          => write
      );
   U_8 : c6_t1_victory_effect
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk          => clk,
         enable       => enable,
         rst_n        => rst_n,
         X_coordinate => din5,
         Y_coordinate => din4,
         color        => din3
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
