<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 13:51:53 on 12/09/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t6_direction_block.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - laurila2.laurila2 (linux-desktop3.tuni.fi)</span>
<span class=C>--          at - 11:57:10 10&#47;02&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t6_direction_block <span class=K>IS</span>
   <span class=K>PORT</span>(
      X_coord   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable    : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      direction : <span class=A>INOUT</span>  <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t6_direction_block ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t6_direction_block.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - laurila2.laurila2 (linux-desktop3.tuni.fi)</span>
<span class=C>--          at - 11:57:09 10&#47;02&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c2_t6_direction_block <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> d     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din2  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din3  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din4  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3 : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_0reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_6' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_6temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'adff'</span>
   direction <= mw_U_0reg_cval;
   u_0seq_proc: <span class=K>PROCESS</span> (clk, rst)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst = '0') <span class=K>THEN</span>
         mw_U_0reg_cval <= '1';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_0reg_cval <= d;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'and'</span>
   dout2 <= dout1 <span class=K>AND</span> <span class=K>NOT</span>(direction);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'and'</span>
   dout1 <= enable <span class=K>AND</span> din3;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'and'</span>
   din2 <= enable <span class=K>AND</span> din1;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'and'</span>
   dout3 <= din2 <span class=K>AND</span> direction;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'inv'</span>
   din4 <= <span class=K>NOT</span>(direction);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'mux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(direction, din4, dout)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> dout <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => d <= direction;
      <span class=K>WHEN</span> '1' => d <= din4;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => d <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'or'</span>
   dout <= dout2 <span class=K>OR</span> dout3;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'split'</span>
   mw_U_6temp_din <= X_coord;
   u_6combo_proc: <span class=K>PROCESS</span> (mw_U_6temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_6temp_din(7 <span class=K>DOWNTO</span> 0);
      din3 <= temp_din(1);
      din1 <= temp_din(6);
   <span class=K>END</span> <span class=K>PROCESS</span> u_6combo_proc;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
